{"remainingRequest":"/Volumes/data/1902/vue1/vue1/myapp1/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/data/1902/vue1/vue1/myapp1/src/views/Detail.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Volumes/data/1902/vue1/vue1/myapp1/src/views/Detail.vue","mtime":1559188465313},{"path":"/Volumes/data/1902/vue1/vue1/myapp1/node_modules/cache-loader/dist/cjs.js","mtime":1558966544429},{"path":"/Volumes/data/1902/vue1/vue1/myapp1/node_modules/babel-loader/lib/index.js","mtime":1558966544148},{"path":"/Volumes/data/1902/vue1/vue1/myapp1/node_modules/cache-loader/dist/cjs.js","mtime":1558966544429},{"path":"/Volumes/data/1902/vue1/vue1/myapp1/node_modules/vue-loader/lib/index.js","mtime":1558966550778}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport axios from 'axios'\nexport default {\n  data () {\n    return {\n      title: '',\n      year: '',\n      src: '',\n      showBase: false,\n      config: {\n        quota: 2,\n        quotaUsed: 0,\n        resetStepperOnHide: false,\n        resetSelectedSkuOnHide: false,\n        closeOnClickOverlay: true,\n        disableStepperInput: false,\n        messageConfig: {}\n      },\n      sku: {\n        // 所有sku规格类目与其值的从属关系，比如商品有颜色和尺码两大类规格，颜色下面又有红色和蓝色两个规格值。\n        // 可以理解为一个商品可以有多个规格类目，一个规格类目下可以有多个规格值。\n        tree: [\n          {\n            k: '类型', // skuKeyName：规格类目名称\n            v: [\n              {\n                id: '1214', // skuValueId：规格值 id\n                name: '普通', // skuValueName：规格值名称\n                imgUrl: 'https://img.yzcdn.cn/2.jpg' // 规格类目图片，只有第一个规格类目可以定义图片\n              },\n              {\n                id: '1215',\n                name: 'vip',\n                imgUrl: 'https://img.yzcdn.cn/2.jpg'\n              }\n            ],\n            k_s: 's1' // skuKeyStr：sku 组合列表（下方 list）中当前类目对应的 key 值，value 值会是从属于当前类目的一个规格值 id\n          }\n        ],\n        // 所有 sku 的组合列表，比如红色、M 码为一个 sku 组合，红色、S 码为另一个组合\n        list: [\n          {\n            id: 2259, // skuId，下单时后端需要\n            price: 12000, // 价格（单位分）\n            s1: '1215', // 规格类目 k_s 为 s1 的对应规格值 id\n            stock_num: 110 // 当前 sku 组合对应的库存\n          },\n          {\n            id: 2261, // skuId，下单时后端需要\n            price: 10000, // 价格（单位分）\n            s1: '1214', // 规格类目 k_s 为 s1 的对应规格值 id\n            stock_num: 30 // 当前 sku 组合对应的库存\n          }\n        ],\n        price: '100.00', // 默认价格（单位元）\n        stock_num: 227, // 商品总库存\n        collection_id: 2261, // 无规格商品 skuId 取 collection_id，否则取所选 sku 组合对应的 id\n        none_sku: false, // 是否无规格商品\n        messages: [\n          {\n            // 商品留言\n            datetime: '0', // 留言类型为 time 时，是否含日期。'1' 表示包含\n            multiple: '0', // 留言类型为 text 时，是否多行文本。'1' 表示多行\n            name: '留言', // 留言名称\n            type: 'text', // 留言类型，可选: id_no（身份证）, text, tel, date, time, email\n            required: '1' // 是否必填 '1' 表示必填\n          }\n        ],\n        hide_stock: false // 是否隐藏剩余库存\n      },\n      goods: {\n        // 商品标题\n        title: '测试商品',\n        // 默认商品 sku 缩略图\n        picture: 'https://img.yzcdn.cn/2.jpg'\n      },\n      skuData: {\n        // 商品 id\n        goodsId: '946755',\n        // 留言信息\n        messages: {\n          message_0: '12',\n          message_1: ''\n        },\n        // 另一种格式的留言，key 不同\n        cartMessages: {\n          '留言1': 'xxxx'\n        },\n        // 选择的商品数量\n        selectedNum: 1,\n        // 选择的 sku 组合\n        selectedSkuComb: {\n          id: 2257,\n          price: 100,\n          s1: '1215',\n          s2: '1216',\n          s3: '1214',\n          stock_num: 111\n        }\n      }\n    }\n  },\n  mounted () {\n    const { id } = this.$route.params\n    axios.get(`http://www.daxunxun.com/detail?id=${id}`)\n      .then(res => {\n        this.goods.title = this.title = res.data[0].title\n        this.year = res.data[0].year\n        this.goods.picture = this.src = res.data[0].images.small\n      })\n      .catch(err => {\n        console.log(err)\n      })\n  },\n  methods: {\n    service () {\n      console.log('客服')\n    },\n    goCart () {\n      console.log('购物车')\n    },\n    addCart () {\n      console.log('加入购物车')\n    },\n    Buy () {\n      this.showBase = true\n    },\n    close () {\n      this.$router.go(-1)\n    },\n    onBuyClicked (skuData) {\n      console.log(skuData)\n    },\n    onAddCartClicked (skuData) {\n      console.log(skuData)\n    }\n  }\n}\n",{"version":3,"sources":["Detail.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAufile":"Detail.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"box\">\n    <div class=\"container\">\n      <van-nav-bar\n        :title=\"title\"\n        left-arrow\n        @click-left=\"close\"\n      />\n      <div class=\"content\">\n       <div class=\"pic\">\n          <img :src='src' alt=\"\">\n       </div>\n      </div>\n    </div>\n    <van-goods-action>\n      <van-goods-action-mini-btn\n        icon=\"chat-o\"\n        text=\"客服\"\n        @click=\"service\"\n      />\n      <van-goods-action-mini-btn\n        icon=\"cart-o\"\n        text=\"购物车\"\n        @click=\"goCart\"\n      />\n      <van-goods-action-big-btn\n        text=\"加入购物车\"\n        @click=\"addCart\"\n      />\n      <van-goods-action-big-btn\n        primary\n        text=\"立即购买\"\n        @click=\"Buy\"\n      />\n    </van-goods-action>\n    <van-sku\n      v-model=\"showBase\"\n      :sku=\"sku\"\n      :goods=\"goods\"\n      :goods-id=\"skuData.goodsId\"\n      :hide-stock=\"sku.hide_stock\"\n      :quota=\"config.quota\"\n      :quota-used=\"config.quotaUsed\"\n      :reset-stepper-on-hide=\"config.resetStepperOnHide\"\n      :reset-selected-sku-on-hide=\"config.resetSelectedSkuOnHide\"\n      :close-on-click-overlay=\"config.closeOnClickOverlay\"\n      :disable-stepper-input=\"config.disableStepperInput\"\n      :message-config=\"config.messageConfig\"\n      @buy-clicked=\"onBuyClicked\"\n      @add-cart=\"onAddCartClicked\"\n    />\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\nexport default {\n  data () {\n    return {\n      title: '',\n      year: '',\n      src: '',\n      showBase: false,\n      config: {\n        quota: 2,\n        quotaUsed: 0,\n        resetStepperOnHide: false,\n        resetSelectedSkuOnHide: false,\n        closeOnClickOverlay: true,\n        disableStepperInput: false,\n        messageConfig: {}\n      },\n      sku: {\n        // 所有sku规格类目与其值的从属关系，比如商品有颜色和尺码两大类规格，颜色下面又有红色和蓝色两个规格值。\n        // 可以理解为一个商品可以有多个规格类目，一个规格类目下可以有多个规格值。\n        tree: [\n          {\n            k: '类型', // skuKeyName：规格类目名称\n            v: [\n              {\n                id: '1214', // skuValueId：规格值 id\n                name: '普通', // skuValueName：规格值名称\n                imgUrl: 'https://img.yzcdn.cn/2.jpg' // 规格类目图片，只有第一个规格类目可以定义图片\n              },\n              {\n                id: '1215',\n                name: 'vip',\n                imgUrl: 'https://img.yzcdn.cn/2.jpg'\n              }\n            ],\n            k_s: 's1' // skuKeyStr：sku 组合列表（下方 list）中当前类目对应的 key 值，value 值会是从属于当前类目的一个规格值 id\n          }\n        ],\n        // 所有 sku 的组合列表，比如红色、M 码为一个 sku 组合，红色、S 码为另一个组合\n        list: [\n          {\n            id: 2259, // skuId，下单时后端需要\n            price: 12000, // 价格（单位分）\n            s1: '1215', // 规格类目 k_s 为 s1 的对应规格值 id\n            stock_num: 110 // 当前 sku 组合对应的库存\n          },\n          {\n            id: 2261, // skuId，下单时后端需要\n            price: 10000, // 价格（单位分）\n            s1: '1214', // 规格类目 k_s 为 s1 的对应规格值 id\n            stock_num: 30 // 当前 sku 组合对应的库存\n          }\n        ],\n        price: '100.00', // 默认价格（单位元）\n        stock_num: 227, // 商品总库存\n        collection_id: 2261, // 无规格商品 skuId 取 collection_id，否则取所选 sku 组合对应的 id\n        none_sku: false, // 是否无规格商品\n        messages: [\n          {\n            // 商品留言\n            datetime: '0', // 留言类型为 time 时，是否含日期。'1' 表示包含\n            multiple: '0', // 留言类型为 text 时，是否多行文本。'1' 表示多行\n            name: '留言', // 留言名称\n            type: 'text', // 留言类型，可选: id_no（身份证）, text, tel, date, time, email\n            required: '1' // 是否必填 '1' 表示必填\n          }\n        ],\n        hide_stock: false // 是否隐藏剩余库存\n      },\n      goods: {\n        // 商品标题\n        title: '测试商品',\n        // 默认商品 sku 缩略图\n        picture: 'https://img.yzcdn.cn/2.jpg'\n      },\n      skuData: {\n        // 商品 id\n        goodsId: '946755',\n        // 留言信息\n        messages: {\n          message_0: '12',\n          message_1: ''\n        },\n        // 另一种格式的留言，key 不同\n        cartMessages: {\n          '留言1': 'xxxx'\n        },\n        // 选择的商品数量\n        selectedNum: 1,\n        // 选择的 sku 组合\n        selectedSkuComb: {\n          id: 2257,\n          price: 100,\n          s1: '1215',\n          s2: '1216',\n          s3: '1214',\n          stock_num: 111\n        }\n      }\n    }\n  },\n  mounted () {\n    const { id } = this.$route.params\n    axios.get(`http://www.daxunxun.com/detail?id=${id}`)\n      .then(res => {\n        this.goods.title = this.title = res.data[0].title\n        this.year = res.data[0].year\n        this.goods.picture = this.src = res.data[0].images.small\n      })\n      .catch(err => {\n        console.log(err)\n      })\n  },\n  methods: {\n    service () {\n      console.log('客服')\n    },\n    goCart () {\n      console.log('购物车')\n    },\n    addCart () {\n      console.log('加入购物车')\n    },\n    Buy () {\n      this.showBase = true\n    },\n    close () {\n      this.$router.go(-1)\n    },\n    onBuyClicked (skuData) {\n      console.log(skuData)\n    },\n    onAddCartClicked (skuData) {\n      console.log(skuData)\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n@import '@/lib/reset.scss';\n.box{\n  .content{\n    .pic{\n      @include rect(100%,3rem);\n      @include overflow(hidden);\n      position: relative;\n      img{\n        @include rect(100%,auto);\n        position: absolute;\n        top:-.8rem\n      }\n    }\n  }\n}\n</style>\n"]}]}